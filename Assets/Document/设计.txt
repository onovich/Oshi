游戏玩法：推箱

规范
静态的 Wall / Spike / Goal 可以用 Terrain 实现, 存在 Map 里
动态的 Wall / Spike / Goal 需要用 Cell 实现, 存在 Context 里
这样拆分是为了配置方便, 动态的需求比较少, 但为此要频繁配置 ShapeTM 很麻烦

已实现
1. Role 可以移动
2. Block 可以被 Role 推动
3. Wall 阻挡 Block 和 Role
4. Spike 杀死 Role 和 Block
5. Goal 终点
6. Block / Wall / Spike / Goal 多格

未实现
1. Gate 传送门
2. Enemy 可以被 Spike 杀死，仅在遇到 Wall 和 Block、看到 Role 时改变方向，杀死 Role
3. Boss 可以杀死 Spike、Block、Role，遇到 Wall 、看到 Role时改变方向
4. Spike 可能有 Pathing 组件，即可移动
5. Role 多格

特殊玩法
1. 三消箱子
2. 合成箱子
3. 用两个箱子挤死敌人
4. 潜行
5. 利用刺传送箱子
6. 利用敌人摧毁刺
7. 华容道
8. 多格箱子需要多格 Role 才能推动（单侧侧面需要全部接触）
9. 可以推动 Map(Map是蒙版，部分内容在画布外)
10. 遮挡视线的块，参考坦克大战
??. RPG...
11. 像 Baba 一样变化玩家操作的角色类（但不让玩家选择）, 需要利用机制过关(比如: Spike 不可触碰 Block, 但可以推动 Wall, Wall 可以推动 Block... 之类的). 颜色和形状都可以表达机制
??. 教学关, 可以加一些辅助图形和辅助目标, 比如要让腾挪空位合一、腾挪空位奇偶性原理、网锁、穿越等技巧, 让玩家边玩边学会
??. 一关内可以有多个目标，甚至关卡名也可以中途变化
12. Constraint 可以是数组, 也即一个关卡中有多个场景, 通过传送门或特殊机制传送   
13. Block + Goal = 灯。黑暗关卡, 利用灯点亮视野
14. 被点亮才会出现且有效的机关(比如 Button)

备忘
1. 目前的轨道是死轨道，也即 Traveler 对 PathCar 执行硬跟随; 如果希望更灵活，可以通过记录每帧和上一帧位置插值, 通过 Offset 影响 Traveler
2. Path 的可视化，应该显示 Node, 否则无法预判每回合 Path 行动的格子数
3. 关卡顺序可以非线性，类似以撒那样，进哪个门就进哪个关卡
4. 关卡配置中应该包括相机距离，并对其范围在编辑器中进行可视化预览
5. 目前关卡配置不方便调整Shape，最好 Shape 也在 Map 中配置。可以把 Editor 和 EM 合并，大量配置放进 MapTM 的 SpawnTM 里
6. EM 自动保存到 AA
**. Map 最好支持 基于 Shape, 而非基于 Size, 但要考虑到它最好易于编辑 